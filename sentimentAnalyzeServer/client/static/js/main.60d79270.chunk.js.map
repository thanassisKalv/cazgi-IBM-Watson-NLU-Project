{"version":3,"sources":["EmotionTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmotionTable","state","emotionList","console","log","this","props","emotions","emotionTable","Object","entries","map","emotion","style","color","border","setState","fontSize","React","Component","App","innercomp","rows","cols","id","mode","sentimentOutput","sentiment","renderTextArea","document","getElementById","value","renderTextBox","sendForSentimentAnalysis","url","axios","get","then","response","output","data","label","score","sendForEmotionAnalysis","title","className","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wPAiCeA,G,uNA7BXC,MAAQ,CAAEC,YAAY,I,kEAElBC,QAAQC,IAAIC,KAAKC,MAAMC,UACvB,IACKC,EADgBC,OAAOC,QAAQL,KAAKC,MAAMC,UACZI,KAAI,SAACC,GAEnC,OADAT,QAAQC,IAAIQ,GACL,+BAAI,qBAAIC,MAAO,CAACC,MAAO,QAAQC,OAAQ,mBAAnC,UAAwDH,EAAQ,GAAhE,OACd,qBAAIC,MAAO,CAACC,MAAO,QAAQC,OAAQ,mBAAnC,cAAyDH,EAAQ,GAAjE,aAGDP,KAAKW,SAAS,CAACd,YAAY,uBAAOW,MAAO,CAACE,OAAQ,kBAAmB,cAAe,OAAQ,eAAgB,QAAjF,SAA0F,gCAAQP,U,+BAOlI,OACE,sBAAKK,MAHY,CAAEC,MAAM,QAAQG,SAAS,QAG1C,2BAEE,uBAEIZ,KAAKJ,MAAMC,mB,GAvBIgB,IAAMC,Y,gBCmGlBC,E,4MA5FbnB,MAAQ,CAACoB,UAAU,0BAAUC,KAAK,IAAIC,KAAK,KAAKC,GAAG,cACzCC,KAAM,OACRC,gBAAgB,GAChBC,WAAU,G,EAGlBC,eAAiB,WACfC,SAASC,eAAe,aAAaC,MAAQ,GACtB,QAApB,EAAK9B,MAAMwB,MACZ,EAAKT,SAAS,CAACK,UAAU,0BAAUC,KAAK,IAAIC,KAAK,KAAKC,GAAG,cACzDC,KAAM,OACNC,gBAAgB,GAChBC,WAAU,K,EAKdK,cAAgB,WACdH,SAASC,eAAe,aAAaC,MAAQ,GACtB,SAApB,EAAK9B,MAAMwB,MACZ,EAAKT,SAAS,CAACK,UAAU,0BAAUC,KAAK,IAAIC,KAAK,KAAKC,GAAG,cACzDC,KAAM,MACNC,gBAAgB,GAChBC,WAAU,K,EAKdM,yBAA2B,WACzB,EAAKjB,SAAS,CAACW,WAAU,IACzB,IACIO,EAAM,IAGRA,EADqB,QAApB,EAAKjC,MAAMwB,KACNS,EAAI,sBAAsBL,SAASC,eAAe,aAAaC,MAE/DG,EAAI,wBAAwBL,SAASC,eAAe,aAAaC,MAEnEI,IAAMC,IAAIF,GACZG,MAAK,SAACC,GACNnC,QAAQC,IAAIkC,GAId,IAAIC,EAASD,EAASE,KACtBrC,QAAQC,IAAImC,GAGVA,EADkB,aAAjBA,EAAOE,MACC,sBAAK5B,MAAO,CAACC,MAAM,QAAQG,SAAS,IAApC,UAA0CsB,EAAOE,MAAjD,MAA2DF,EAAOG,SAClD,aAAhBH,EAAOC,KACP,sBAAK3B,MAAO,CAACC,MAAM,MAAMG,SAAS,IAAlC,UAAwCsB,EAAOE,MAA/C,MAAyDF,EAAOG,SAEhE,sBAAK7B,MAAO,CAACC,MAAM,SAASG,SAAS,IAArC,UAA2CsB,EAAOE,MAAlD,MAA4DF,EAAOG,SAE9E,EAAK1B,SAAS,CAACU,gBAAgBa,Q,EAInCI,uBAAyB,WACvB,EAAK3B,SAAS,CAACW,WAAU,IACzB,IACIO,EAAM,IAERA,EADqB,QAApB,EAAKjC,MAAMwB,KACNS,EAAI,oBAAoBL,SAASC,eAAe,aAAaC,MAE7DG,EAAI,uBAAuBL,SAASC,eAAe,aAAaC,MAElEI,IAAMC,IAAIF,GAEZG,MAAK,SAACC,GACR,EAAKtB,SAAS,CAACU,gBAAgB,cAAC,EAAD,CAAcnB,SAAU+B,EAASE,KAAK5B,gB,kEAxEvEiB,SAASe,MAAQ,uB,+BA8EjB,OACE,sBAAKC,UAAU,MAAf,UACA,wBAAQA,UAAU,eAAeC,QAASzC,KAAKuB,eAA/C,kBACE,wBAAQiB,UAAU,eAAgBC,QAASzC,KAAK2B,cAAhD,iBACA,uBAAK,uBACJ3B,KAAKJ,MAAMoB,UACZ,uBACA,wBAAQwB,UAAU,cAAcC,QAASzC,KAAK4B,yBAA9C,+BACA,wBAAQY,UAAU,cAAcC,QAASzC,KAAKsC,uBAA9C,6BACA,uBACKtC,KAAKJ,MAAMyB,uB,GA1FNR,IAAMC,WCMT4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAASC,eAAe,SAM1BiB,K","file":"static/js/main.60d79270.chunk.js","sourcesContent":["import React from 'react';\nimport './bootstrap.min.css';\n\nclass EmotionTable extends React.Component {\n    state = { emotionList:[] }\n    componentDidMount() {\n        console.log(this.props.emotions);\n        let listOfEmotions = Object.entries(this.props.emotions);\n         let emotionTable = listOfEmotions.map((emotion)=>{\n             console.log(emotion);\n             return <tr><td style={{color: \"black\",border: \"1px solid black\"}}>{emotion[0]} </td>\n          <td style={{color: \"black\",border: \"1px solid black\"}}> {emotion[1]} </td></tr>\n         });\n\n         this.setState({emotionList:<table style={{border: \"1px solid black\", \"margin-left\": \"auto\", \"margin-right\": \"auto\"}}><tbody>{emotionTable}</tbody></table>})\n    }\n\n    \n  render() {\n    const colorStyle = { color:\"black\",fontSize:\"20px\"}\n    let li_ctr = 0;\n    return (\n      <div style={colorStyle}>\n        Emotions Table\n        <br/>\n            {\n            this.state.emotionList\n            }\n        </div>\n    );\n  }\n    \n}\nexport default EmotionTable;\n","import './bootstrap.min.css';\nimport './App.css';\nimport EmotionTable from './EmotionTable.js';\nimport React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  componentDidMount(){\n    document.title = \"Sentiment Analyzer\";\n  }\n  state = {innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\n            mode: \"text\",\n          sentimentOutput:[],\n          sentiment:true\n        }\n  \n  renderTextArea = ()=>{\n    document.getElementById(\"textinput\").value = \"\";\n    if(this.state.mode === \"url\") {\n      this.setState({innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\n      mode: \"text\",\n      sentimentOutput:[],\n      sentiment:true\n    })\n    } \n  }\n\n  renderTextBox = ()=>{\n    document.getElementById(\"textinput\").value = \"\";\n    if(this.state.mode === \"text\") {\n      this.setState({innercomp:<textarea rows=\"1\" cols=\"50\" id=\"textinput\"/>,\n      mode: \"url\",\n      sentimentOutput:[],\n      sentiment:true\n    })\n    }\n  }\n\n  sendForSentimentAnalysis = () => {\n    this.setState({sentiment:true});\n    let ret = \"\";\n    let url = \".\";\n\n    if(this.state.mode === \"url\") {\n      url = url+\"/url/sentiment?url=\"+document.getElementById(\"textinput\").value;\n    } else {\n      url = url+\"/text/sentiment?text=\"+document.getElementById(\"textinput\").value;\n    }\n    ret = axios.get(url);\n    ret.then((response)=>{\n        console.log(response);\n      //Include code here to check the sentiment and fomrat the data accordingly\n\n      //this.setState({sentimentOutput:response.data});\n      let output = response.data;\n      console.log(output);\n      \n      if(output.label === \"positive\") {\n        output = <div style={{color:\"green\",fontSize:20}}>{output.label} - {output.score}</div>\n      } else if (output.data === \"negative\"){\n        output = <div style={{color:\"red\",fontSize:20}}>{output.label} - {output.score}</div>\n      } else {\n        output = <div style={{color:\"orange\",fontSize:20}}>{output.label} - {output.score}</div>\n      }\n      this.setState({sentimentOutput:output});\n    });\n  }\n\n  sendForEmotionAnalysis = () => {\n    this.setState({sentiment:false});\n    let ret = \"\";\n    let url = \".\";\n    if(this.state.mode === \"url\") {\n      url = url+\"/url/emotion?url=\"+document.getElementById(\"textinput\").value;\n    } else {\n      url = url+\"/text/emotion/?text=\"+document.getElementById(\"textinput\").value;\n    }\n    ret = axios.get(url);\n\n    ret.then((response)=>{\n      this.setState({sentimentOutput:<EmotionTable emotions={response.data.emotion}/>});\n  });\n  }\n  \n\n  render() {\n    return (  \n      <div className=\"App\">\n      <button className=\"btn btn-info\" onClick={this.renderTextArea}>Text</button>\n        <button className=\"btn btn-dark\"  onClick={this.renderTextBox}>URL</button>\n        <br/><br/>\n        {this.state.innercomp}\n        <br/>\n        <button className=\"btn-primary\" onClick={this.sendForSentimentAnalysis}>Analyze Sentiment</button>\n        <button className=\"btn-primary\" onClick={this.sendForEmotionAnalysis}>Analyze Emotion</button>\n        <br/>\n            {this.state.sentimentOutput}\n      </div>\n    );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}